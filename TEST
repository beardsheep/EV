#更新日期2022/9/23
#STEP1:用歷史資料以及政策目標嘗試用同成長速度去擬合
#結果2030(可以達到)、2040(可以達到)
#2035(受2040年須達100%的限制，2035年的擬合值(62.56)比政府的60%還多，原因可能出在政策成長速度2030-2035(相較下稍慢)，2035-2040("稍快))

import numpy as np
import matplotlib.pyplot as plt
import math
import pandas as pd
import numpy as np 
import matplotlib.pyplot as plt
from scipy.optimize import curve_fit

def logistic_increase_function(t,K,nv0,r):
    t0=30
    nv0=30
    #K=為市占率限制式
    #r=成長速度可以調整
    exp_value=np.exp(r*(t-t0))
    return (K*exp_value*nv0)/(K+(exp_value-1)*nv0)
t=[20,21,30,35,40]
t=np.array(t)  
nv=[1.77,2.06,30,60,100] 
nv=np.array(nv)
popt, pcov = curve_fit(logistic_increase_function, t, nv)
print("K:total  nv0:2021_value  r:increase_rate")
print(popt)
#nv = logistic_increase_function(t,popt[0],popt[1],popt[2]) 
nv_predict = logistic_increase_function(t, popt[0],popt[1],popt[2])

#FUTURE預測
f=[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40] 
f=np.array(f)
f_predict=logistic_increase_function(f,popt[0],popt[1],popt[2])
print('nv估值:', f_predict)
plot1 = plt.plot(t,nv, 's',label="EV")
plot2 = plt.plot(f, f_predict, 'r',label="EV_f")
plt.xlabel('time') 
plt.ylabel('Grow')
plt.legend(loc=0)
